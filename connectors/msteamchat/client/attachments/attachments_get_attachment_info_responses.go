package attachments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/uva-its/gopherbot/connectors/msteamchat/models"
)

// AttachmentsGetAttachmentInfoReader is a Reader for the AttachmentsGetAttachmentInfo structure.
type AttachmentsGetAttachmentInfoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AttachmentsGetAttachmentInfoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewAttachmentsGetAttachmentInfoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewAttachmentsGetAttachmentInfoBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewAttachmentsGetAttachmentInfoUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewAttachmentsGetAttachmentInfoForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewAttachmentsGetAttachmentInfoNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewAttachmentsGetAttachmentInfoInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewAttachmentsGetAttachmentInfoServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAttachmentsGetAttachmentInfoOK creates a AttachmentsGetAttachmentInfoOK with default headers values
func NewAttachmentsGetAttachmentInfoOK() *AttachmentsGetAttachmentInfoOK {
	return &AttachmentsGetAttachmentInfoOK{}
}

/*AttachmentsGetAttachmentInfoOK handles this case with default header values.

An attachmentInfo object is returned which describes the:
* type of the attachment
* name of the attachment


and an array of views:
* Size - size of the object
* ViewId - View Id which can be used to fetch a variation on the content (ex: original or thumbnail)
*/
type AttachmentsGetAttachmentInfoOK struct {
	Payload *models.AttachmentInfo
}

func (o *AttachmentsGetAttachmentInfoOK) Error() string {
	return fmt.Sprintf("[GET /v3/attachments/{attachmentId}][%d] attachmentsGetAttachmentInfoOK  %+v", 200, o.Payload)
}

func (o *AttachmentsGetAttachmentInfoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AttachmentInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAttachmentsGetAttachmentInfoBadRequest creates a AttachmentsGetAttachmentInfoBadRequest with default headers values
func NewAttachmentsGetAttachmentInfoBadRequest() *AttachmentsGetAttachmentInfoBadRequest {
	return &AttachmentsGetAttachmentInfoBadRequest{}
}

/*AttachmentsGetAttachmentInfoBadRequest handles this case with default header values.

The request was malformed or otherwise incorrect. Inspect the message for a more detailed description.
*/
type AttachmentsGetAttachmentInfoBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *AttachmentsGetAttachmentInfoBadRequest) Error() string {
	return fmt.Sprintf("[GET /v3/attachments/{attachmentId}][%d] attachmentsGetAttachmentInfoBadRequest  %+v", 400, o.Payload)
}

func (o *AttachmentsGetAttachmentInfoBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAttachmentsGetAttachmentInfoUnauthorized creates a AttachmentsGetAttachmentInfoUnauthorized with default headers values
func NewAttachmentsGetAttachmentInfoUnauthorized() *AttachmentsGetAttachmentInfoUnauthorized {
	return &AttachmentsGetAttachmentInfoUnauthorized{}
}

/*AttachmentsGetAttachmentInfoUnauthorized handles this case with default header values.

The bot is not authorized to make this request. Please check your Microsoft App ID and Microsoft App password.
*/
type AttachmentsGetAttachmentInfoUnauthorized struct {
}

func (o *AttachmentsGetAttachmentInfoUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v3/attachments/{attachmentId}][%d] attachmentsGetAttachmentInfoUnauthorized ", 401)
}

func (o *AttachmentsGetAttachmentInfoUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAttachmentsGetAttachmentInfoForbidden creates a AttachmentsGetAttachmentInfoForbidden with default headers values
func NewAttachmentsGetAttachmentInfoForbidden() *AttachmentsGetAttachmentInfoForbidden {
	return &AttachmentsGetAttachmentInfoForbidden{}
}

/*AttachmentsGetAttachmentInfoForbidden handles this case with default header values.

The request was a valid request, but the server is refusing to respond to it. The user might be logged in but does not have the necessary permissions for the resource.
*/
type AttachmentsGetAttachmentInfoForbidden struct {
}

func (o *AttachmentsGetAttachmentInfoForbidden) Error() string {
	return fmt.Sprintf("[GET /v3/attachments/{attachmentId}][%d] attachmentsGetAttachmentInfoForbidden ", 403)
}

func (o *AttachmentsGetAttachmentInfoForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAttachmentsGetAttachmentInfoNotFound creates a AttachmentsGetAttachmentInfoNotFound with default headers values
func NewAttachmentsGetAttachmentInfoNotFound() *AttachmentsGetAttachmentInfoNotFound {
	return &AttachmentsGetAttachmentInfoNotFound{}
}

/*AttachmentsGetAttachmentInfoNotFound handles this case with default header values.

The resource was not found.
*/
type AttachmentsGetAttachmentInfoNotFound struct {
	Payload *models.ErrorResponse
}

func (o *AttachmentsGetAttachmentInfoNotFound) Error() string {
	return fmt.Sprintf("[GET /v3/attachments/{attachmentId}][%d] attachmentsGetAttachmentInfoNotFound  %+v", 404, o.Payload)
}

func (o *AttachmentsGetAttachmentInfoNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAttachmentsGetAttachmentInfoInternalServerError creates a AttachmentsGetAttachmentInfoInternalServerError with default headers values
func NewAttachmentsGetAttachmentInfoInternalServerError() *AttachmentsGetAttachmentInfoInternalServerError {
	return &AttachmentsGetAttachmentInfoInternalServerError{}
}

/*AttachmentsGetAttachmentInfoInternalServerError handles this case with default header values.

An internal server has occurred. Inspect the message for a more detailed description.
*/
type AttachmentsGetAttachmentInfoInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *AttachmentsGetAttachmentInfoInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v3/attachments/{attachmentId}][%d] attachmentsGetAttachmentInfoInternalServerError  %+v", 500, o.Payload)
}

func (o *AttachmentsGetAttachmentInfoInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAttachmentsGetAttachmentInfoServiceUnavailable creates a AttachmentsGetAttachmentInfoServiceUnavailable with default headers values
func NewAttachmentsGetAttachmentInfoServiceUnavailable() *AttachmentsGetAttachmentInfoServiceUnavailable {
	return &AttachmentsGetAttachmentInfoServiceUnavailable{}
}

/*AttachmentsGetAttachmentInfoServiceUnavailable handles this case with default header values.

The service you are trying to communciate with is unavailable.
*/
type AttachmentsGetAttachmentInfoServiceUnavailable struct {
	Payload *models.ErrorResponse
}

func (o *AttachmentsGetAttachmentInfoServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /v3/attachments/{attachmentId}][%d] attachmentsGetAttachmentInfoServiceUnavailable  %+v", 503, o.Payload)
}

func (o *AttachmentsGetAttachmentInfoServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
