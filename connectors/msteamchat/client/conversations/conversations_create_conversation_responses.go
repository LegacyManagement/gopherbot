package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/uva-its/gopherbot/connectors/msteamchat/models"
)

// ConversationsCreateConversationReader is a Reader for the ConversationsCreateConversation structure.
type ConversationsCreateConversationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ConversationsCreateConversationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewConversationsCreateConversationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 201:
		result := NewConversationsCreateConversationCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewConversationsCreateConversationAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewConversationsCreateConversationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewConversationsCreateConversationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewConversationsCreateConversationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewConversationsCreateConversationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewConversationsCreateConversationMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewConversationsCreateConversationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewConversationsCreateConversationServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewConversationsCreateConversationOK creates a ConversationsCreateConversationOK with default headers values
func NewConversationsCreateConversationOK() *ConversationsCreateConversationOK {
	return &ConversationsCreateConversationOK{}
}

/*ConversationsCreateConversationOK handles this case with default header values.

ConversationsCreateConversationOK conversations create conversation o k
*/
type ConversationsCreateConversationOK struct {
	Payload *models.ConversationResourceResponse
}

func (o *ConversationsCreateConversationOK) Error() string {
	return fmt.Sprintf("[POST /v3/conversations][%d] conversationsCreateConversationOK  %+v", 200, o.Payload)
}

func (o *ConversationsCreateConversationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConversationResourceResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConversationsCreateConversationCreated creates a ConversationsCreateConversationCreated with default headers values
func NewConversationsCreateConversationCreated() *ConversationsCreateConversationCreated {
	return &ConversationsCreateConversationCreated{}
}

/*ConversationsCreateConversationCreated handles this case with default header values.

ConversationsCreateConversationCreated conversations create conversation created
*/
type ConversationsCreateConversationCreated struct {
	Payload *models.ConversationResourceResponse
}

func (o *ConversationsCreateConversationCreated) Error() string {
	return fmt.Sprintf("[POST /v3/conversations][%d] conversationsCreateConversationCreated  %+v", 201, o.Payload)
}

func (o *ConversationsCreateConversationCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConversationResourceResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConversationsCreateConversationAccepted creates a ConversationsCreateConversationAccepted with default headers values
func NewConversationsCreateConversationAccepted() *ConversationsCreateConversationAccepted {
	return &ConversationsCreateConversationAccepted{}
}

/*ConversationsCreateConversationAccepted handles this case with default header values.

ConversationsCreateConversationAccepted conversations create conversation accepted
*/
type ConversationsCreateConversationAccepted struct {
	Payload *models.ConversationResourceResponse
}

func (o *ConversationsCreateConversationAccepted) Error() string {
	return fmt.Sprintf("[POST /v3/conversations][%d] conversationsCreateConversationAccepted  %+v", 202, o.Payload)
}

func (o *ConversationsCreateConversationAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConversationResourceResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConversationsCreateConversationBadRequest creates a ConversationsCreateConversationBadRequest with default headers values
func NewConversationsCreateConversationBadRequest() *ConversationsCreateConversationBadRequest {
	return &ConversationsCreateConversationBadRequest{}
}

/*ConversationsCreateConversationBadRequest handles this case with default header values.

The request was malformed or otherwise incorrect. Inspect the message for a more detailed description.
*/
type ConversationsCreateConversationBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *ConversationsCreateConversationBadRequest) Error() string {
	return fmt.Sprintf("[POST /v3/conversations][%d] conversationsCreateConversationBadRequest  %+v", 400, o.Payload)
}

func (o *ConversationsCreateConversationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConversationsCreateConversationUnauthorized creates a ConversationsCreateConversationUnauthorized with default headers values
func NewConversationsCreateConversationUnauthorized() *ConversationsCreateConversationUnauthorized {
	return &ConversationsCreateConversationUnauthorized{}
}

/*ConversationsCreateConversationUnauthorized handles this case with default header values.

The bot is not authorized to make this request. Please check your Microsoft App ID and Microsoft App password.
*/
type ConversationsCreateConversationUnauthorized struct {
}

func (o *ConversationsCreateConversationUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v3/conversations][%d] conversationsCreateConversationUnauthorized ", 401)
}

func (o *ConversationsCreateConversationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewConversationsCreateConversationForbidden creates a ConversationsCreateConversationForbidden with default headers values
func NewConversationsCreateConversationForbidden() *ConversationsCreateConversationForbidden {
	return &ConversationsCreateConversationForbidden{}
}

/*ConversationsCreateConversationForbidden handles this case with default header values.

The request was a valid request, but the server is refusing to respond to it. The user might be logged in but does not have the necessary permissions for the resource.
*/
type ConversationsCreateConversationForbidden struct {
}

func (o *ConversationsCreateConversationForbidden) Error() string {
	return fmt.Sprintf("[POST /v3/conversations][%d] conversationsCreateConversationForbidden ", 403)
}

func (o *ConversationsCreateConversationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewConversationsCreateConversationNotFound creates a ConversationsCreateConversationNotFound with default headers values
func NewConversationsCreateConversationNotFound() *ConversationsCreateConversationNotFound {
	return &ConversationsCreateConversationNotFound{}
}

/*ConversationsCreateConversationNotFound handles this case with default header values.

The resource was not found.
*/
type ConversationsCreateConversationNotFound struct {
	Payload *models.ErrorResponse
}

func (o *ConversationsCreateConversationNotFound) Error() string {
	return fmt.Sprintf("[POST /v3/conversations][%d] conversationsCreateConversationNotFound  %+v", 404, o.Payload)
}

func (o *ConversationsCreateConversationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConversationsCreateConversationMethodNotAllowed creates a ConversationsCreateConversationMethodNotAllowed with default headers values
func NewConversationsCreateConversationMethodNotAllowed() *ConversationsCreateConversationMethodNotAllowed {
	return &ConversationsCreateConversationMethodNotAllowed{}
}

/*ConversationsCreateConversationMethodNotAllowed handles this case with default header values.

The method and URI you are trying to use is not allowed on this service.  For example, not all services support the DELETE or PUT verbs on an activity URI.
*/
type ConversationsCreateConversationMethodNotAllowed struct {
	Payload *models.ErrorResponse
}

func (o *ConversationsCreateConversationMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /v3/conversations][%d] conversationsCreateConversationMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *ConversationsCreateConversationMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConversationsCreateConversationInternalServerError creates a ConversationsCreateConversationInternalServerError with default headers values
func NewConversationsCreateConversationInternalServerError() *ConversationsCreateConversationInternalServerError {
	return &ConversationsCreateConversationInternalServerError{}
}

/*ConversationsCreateConversationInternalServerError handles this case with default header values.

An internal server has occurred. Inspect the message for a more detailed description.
*/
type ConversationsCreateConversationInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *ConversationsCreateConversationInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v3/conversations][%d] conversationsCreateConversationInternalServerError  %+v", 500, o.Payload)
}

func (o *ConversationsCreateConversationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConversationsCreateConversationServiceUnavailable creates a ConversationsCreateConversationServiceUnavailable with default headers values
func NewConversationsCreateConversationServiceUnavailable() *ConversationsCreateConversationServiceUnavailable {
	return &ConversationsCreateConversationServiceUnavailable{}
}

/*ConversationsCreateConversationServiceUnavailable handles this case with default header values.

The service you are trying to communciate with is unavailable.
*/
type ConversationsCreateConversationServiceUnavailable struct {
	Payload *models.ErrorResponse
}

func (o *ConversationsCreateConversationServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /v3/conversations][%d] conversationsCreateConversationServiceUnavailable  %+v", 503, o.Payload)
}

func (o *ConversationsCreateConversationServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
