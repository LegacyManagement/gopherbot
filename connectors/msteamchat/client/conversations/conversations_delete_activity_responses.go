package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/uva-its/gopherbot/connectors/msteamchat/models"
)

// ConversationsDeleteActivityReader is a Reader for the ConversationsDeleteActivity structure.
type ConversationsDeleteActivityReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ConversationsDeleteActivityReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewConversationsDeleteActivityOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewConversationsDeleteActivityAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewConversationsDeleteActivityBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewConversationsDeleteActivityUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewConversationsDeleteActivityForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewConversationsDeleteActivityNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewConversationsDeleteActivityMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewConversationsDeleteActivityInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewConversationsDeleteActivityServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewConversationsDeleteActivityOK creates a ConversationsDeleteActivityOK with default headers values
func NewConversationsDeleteActivityOK() *ConversationsDeleteActivityOK {
	return &ConversationsDeleteActivityOK{}
}

/*ConversationsDeleteActivityOK handles this case with default header values.

The operation succeeded, there is no response.
*/
type ConversationsDeleteActivityOK struct {
}

func (o *ConversationsDeleteActivityOK) Error() string {
	return fmt.Sprintf("[DELETE /v3/conversations/{conversationId}/activities/{activityId}][%d] conversationsDeleteActivityOK ", 200)
}

func (o *ConversationsDeleteActivityOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewConversationsDeleteActivityAccepted creates a ConversationsDeleteActivityAccepted with default headers values
func NewConversationsDeleteActivityAccepted() *ConversationsDeleteActivityAccepted {
	return &ConversationsDeleteActivityAccepted{}
}

/*ConversationsDeleteActivityAccepted handles this case with default header values.

The request has been accepted for processing, but the processing has not been completed
*/
type ConversationsDeleteActivityAccepted struct {
}

func (o *ConversationsDeleteActivityAccepted) Error() string {
	return fmt.Sprintf("[DELETE /v3/conversations/{conversationId}/activities/{activityId}][%d] conversationsDeleteActivityAccepted ", 202)
}

func (o *ConversationsDeleteActivityAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewConversationsDeleteActivityBadRequest creates a ConversationsDeleteActivityBadRequest with default headers values
func NewConversationsDeleteActivityBadRequest() *ConversationsDeleteActivityBadRequest {
	return &ConversationsDeleteActivityBadRequest{}
}

/*ConversationsDeleteActivityBadRequest handles this case with default header values.

The request was malformed or otherwise incorrect. Inspect the message for a more detailed description.
*/
type ConversationsDeleteActivityBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *ConversationsDeleteActivityBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /v3/conversations/{conversationId}/activities/{activityId}][%d] conversationsDeleteActivityBadRequest  %+v", 400, o.Payload)
}

func (o *ConversationsDeleteActivityBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConversationsDeleteActivityUnauthorized creates a ConversationsDeleteActivityUnauthorized with default headers values
func NewConversationsDeleteActivityUnauthorized() *ConversationsDeleteActivityUnauthorized {
	return &ConversationsDeleteActivityUnauthorized{}
}

/*ConversationsDeleteActivityUnauthorized handles this case with default header values.

The bot is not authorized to make this request. Please check your Microsoft App ID and Microsoft App password.
*/
type ConversationsDeleteActivityUnauthorized struct {
}

func (o *ConversationsDeleteActivityUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /v3/conversations/{conversationId}/activities/{activityId}][%d] conversationsDeleteActivityUnauthorized ", 401)
}

func (o *ConversationsDeleteActivityUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewConversationsDeleteActivityForbidden creates a ConversationsDeleteActivityForbidden with default headers values
func NewConversationsDeleteActivityForbidden() *ConversationsDeleteActivityForbidden {
	return &ConversationsDeleteActivityForbidden{}
}

/*ConversationsDeleteActivityForbidden handles this case with default header values.

The request was a valid request, but the server is refusing to respond to it. The user might be logged in but does not have the necessary permissions for the resource.
*/
type ConversationsDeleteActivityForbidden struct {
}

func (o *ConversationsDeleteActivityForbidden) Error() string {
	return fmt.Sprintf("[DELETE /v3/conversations/{conversationId}/activities/{activityId}][%d] conversationsDeleteActivityForbidden ", 403)
}

func (o *ConversationsDeleteActivityForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewConversationsDeleteActivityNotFound creates a ConversationsDeleteActivityNotFound with default headers values
func NewConversationsDeleteActivityNotFound() *ConversationsDeleteActivityNotFound {
	return &ConversationsDeleteActivityNotFound{}
}

/*ConversationsDeleteActivityNotFound handles this case with default header values.

The resource was not found.
*/
type ConversationsDeleteActivityNotFound struct {
	Payload *models.ErrorResponse
}

func (o *ConversationsDeleteActivityNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v3/conversations/{conversationId}/activities/{activityId}][%d] conversationsDeleteActivityNotFound  %+v", 404, o.Payload)
}

func (o *ConversationsDeleteActivityNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConversationsDeleteActivityMethodNotAllowed creates a ConversationsDeleteActivityMethodNotAllowed with default headers values
func NewConversationsDeleteActivityMethodNotAllowed() *ConversationsDeleteActivityMethodNotAllowed {
	return &ConversationsDeleteActivityMethodNotAllowed{}
}

/*ConversationsDeleteActivityMethodNotAllowed handles this case with default header values.

The method and URI you are trying to use is not allowed on this service.  For example, not all services support the DELETE or PUT verbs on an activity URI.
*/
type ConversationsDeleteActivityMethodNotAllowed struct {
	Payload *models.ErrorResponse
}

func (o *ConversationsDeleteActivityMethodNotAllowed) Error() string {
	return fmt.Sprintf("[DELETE /v3/conversations/{conversationId}/activities/{activityId}][%d] conversationsDeleteActivityMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *ConversationsDeleteActivityMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConversationsDeleteActivityInternalServerError creates a ConversationsDeleteActivityInternalServerError with default headers values
func NewConversationsDeleteActivityInternalServerError() *ConversationsDeleteActivityInternalServerError {
	return &ConversationsDeleteActivityInternalServerError{}
}

/*ConversationsDeleteActivityInternalServerError handles this case with default header values.

An internal server has occurred. Inspect the message for a more detailed description.
*/
type ConversationsDeleteActivityInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *ConversationsDeleteActivityInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /v3/conversations/{conversationId}/activities/{activityId}][%d] conversationsDeleteActivityInternalServerError  %+v", 500, o.Payload)
}

func (o *ConversationsDeleteActivityInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConversationsDeleteActivityServiceUnavailable creates a ConversationsDeleteActivityServiceUnavailable with default headers values
func NewConversationsDeleteActivityServiceUnavailable() *ConversationsDeleteActivityServiceUnavailable {
	return &ConversationsDeleteActivityServiceUnavailable{}
}

/*ConversationsDeleteActivityServiceUnavailable handles this case with default header values.

The service you are trying to communciate with is unavailable.
*/
type ConversationsDeleteActivityServiceUnavailable struct {
	Payload *models.ErrorResponse
}

func (o *ConversationsDeleteActivityServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /v3/conversations/{conversationId}/activities/{activityId}][%d] conversationsDeleteActivityServiceUnavailable  %+v", 503, o.Payload)
}

func (o *ConversationsDeleteActivityServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
