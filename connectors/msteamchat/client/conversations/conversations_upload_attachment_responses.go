package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/uva-its/gopherbot/connectors/msteamchat/models"
)

// ConversationsUploadAttachmentReader is a Reader for the ConversationsUploadAttachment structure.
type ConversationsUploadAttachmentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ConversationsUploadAttachmentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewConversationsUploadAttachmentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 201:
		result := NewConversationsUploadAttachmentCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewConversationsUploadAttachmentAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewConversationsUploadAttachmentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewConversationsUploadAttachmentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewConversationsUploadAttachmentForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewConversationsUploadAttachmentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewConversationsUploadAttachmentMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewConversationsUploadAttachmentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewConversationsUploadAttachmentServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewConversationsUploadAttachmentOK creates a ConversationsUploadAttachmentOK with default headers values
func NewConversationsUploadAttachmentOK() *ConversationsUploadAttachmentOK {
	return &ConversationsUploadAttachmentOK{}
}

/*ConversationsUploadAttachmentOK handles this case with default header values.

An object will be returned containing the ID for the resource.
*/
type ConversationsUploadAttachmentOK struct {
	Payload *models.ResourceResponse
}

func (o *ConversationsUploadAttachmentOK) Error() string {
	return fmt.Sprintf("[POST /v3/conversations/{conversationId}/attachments][%d] conversationsUploadAttachmentOK  %+v", 200, o.Payload)
}

func (o *ConversationsUploadAttachmentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResourceResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConversationsUploadAttachmentCreated creates a ConversationsUploadAttachmentCreated with default headers values
func NewConversationsUploadAttachmentCreated() *ConversationsUploadAttachmentCreated {
	return &ConversationsUploadAttachmentCreated{}
}

/*ConversationsUploadAttachmentCreated handles this case with default header values.

A ResourceResponse object will be returned containing the ID for the resource.
*/
type ConversationsUploadAttachmentCreated struct {
	Payload *models.ResourceResponse
}

func (o *ConversationsUploadAttachmentCreated) Error() string {
	return fmt.Sprintf("[POST /v3/conversations/{conversationId}/attachments][%d] conversationsUploadAttachmentCreated  %+v", 201, o.Payload)
}

func (o *ConversationsUploadAttachmentCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResourceResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConversationsUploadAttachmentAccepted creates a ConversationsUploadAttachmentAccepted with default headers values
func NewConversationsUploadAttachmentAccepted() *ConversationsUploadAttachmentAccepted {
	return &ConversationsUploadAttachmentAccepted{}
}

/*ConversationsUploadAttachmentAccepted handles this case with default header values.

An object will be returned containing the ID for the resource.
*/
type ConversationsUploadAttachmentAccepted struct {
	Payload *models.ResourceResponse
}

func (o *ConversationsUploadAttachmentAccepted) Error() string {
	return fmt.Sprintf("[POST /v3/conversations/{conversationId}/attachments][%d] conversationsUploadAttachmentAccepted  %+v", 202, o.Payload)
}

func (o *ConversationsUploadAttachmentAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResourceResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConversationsUploadAttachmentBadRequest creates a ConversationsUploadAttachmentBadRequest with default headers values
func NewConversationsUploadAttachmentBadRequest() *ConversationsUploadAttachmentBadRequest {
	return &ConversationsUploadAttachmentBadRequest{}
}

/*ConversationsUploadAttachmentBadRequest handles this case with default header values.

The request was malformed or otherwise incorrect. Inspect the message for a more detailed description.
*/
type ConversationsUploadAttachmentBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *ConversationsUploadAttachmentBadRequest) Error() string {
	return fmt.Sprintf("[POST /v3/conversations/{conversationId}/attachments][%d] conversationsUploadAttachmentBadRequest  %+v", 400, o.Payload)
}

func (o *ConversationsUploadAttachmentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConversationsUploadAttachmentUnauthorized creates a ConversationsUploadAttachmentUnauthorized with default headers values
func NewConversationsUploadAttachmentUnauthorized() *ConversationsUploadAttachmentUnauthorized {
	return &ConversationsUploadAttachmentUnauthorized{}
}

/*ConversationsUploadAttachmentUnauthorized handles this case with default header values.

The bot is not authorized to make this request. Please check your Microsoft App ID and Microsoft App password.
*/
type ConversationsUploadAttachmentUnauthorized struct {
}

func (o *ConversationsUploadAttachmentUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v3/conversations/{conversationId}/attachments][%d] conversationsUploadAttachmentUnauthorized ", 401)
}

func (o *ConversationsUploadAttachmentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewConversationsUploadAttachmentForbidden creates a ConversationsUploadAttachmentForbidden with default headers values
func NewConversationsUploadAttachmentForbidden() *ConversationsUploadAttachmentForbidden {
	return &ConversationsUploadAttachmentForbidden{}
}

/*ConversationsUploadAttachmentForbidden handles this case with default header values.

The request was a valid request, but the server is refusing to respond to it. The user might be logged in but does not have the necessary permissions for the resource.
*/
type ConversationsUploadAttachmentForbidden struct {
}

func (o *ConversationsUploadAttachmentForbidden) Error() string {
	return fmt.Sprintf("[POST /v3/conversations/{conversationId}/attachments][%d] conversationsUploadAttachmentForbidden ", 403)
}

func (o *ConversationsUploadAttachmentForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewConversationsUploadAttachmentNotFound creates a ConversationsUploadAttachmentNotFound with default headers values
func NewConversationsUploadAttachmentNotFound() *ConversationsUploadAttachmentNotFound {
	return &ConversationsUploadAttachmentNotFound{}
}

/*ConversationsUploadAttachmentNotFound handles this case with default header values.

The resource was not found.
*/
type ConversationsUploadAttachmentNotFound struct {
	Payload *models.ErrorResponse
}

func (o *ConversationsUploadAttachmentNotFound) Error() string {
	return fmt.Sprintf("[POST /v3/conversations/{conversationId}/attachments][%d] conversationsUploadAttachmentNotFound  %+v", 404, o.Payload)
}

func (o *ConversationsUploadAttachmentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConversationsUploadAttachmentMethodNotAllowed creates a ConversationsUploadAttachmentMethodNotAllowed with default headers values
func NewConversationsUploadAttachmentMethodNotAllowed() *ConversationsUploadAttachmentMethodNotAllowed {
	return &ConversationsUploadAttachmentMethodNotAllowed{}
}

/*ConversationsUploadAttachmentMethodNotAllowed handles this case with default header values.

The method and URI you are trying to use is not allowed on this service.  For example, not all services support the DELETE or PUT verbs on an activity URI.
*/
type ConversationsUploadAttachmentMethodNotAllowed struct {
	Payload *models.ErrorResponse
}

func (o *ConversationsUploadAttachmentMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /v3/conversations/{conversationId}/attachments][%d] conversationsUploadAttachmentMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *ConversationsUploadAttachmentMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConversationsUploadAttachmentInternalServerError creates a ConversationsUploadAttachmentInternalServerError with default headers values
func NewConversationsUploadAttachmentInternalServerError() *ConversationsUploadAttachmentInternalServerError {
	return &ConversationsUploadAttachmentInternalServerError{}
}

/*ConversationsUploadAttachmentInternalServerError handles this case with default header values.

An internal server has occurred. Inspect the message for a more detailed description.
*/
type ConversationsUploadAttachmentInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *ConversationsUploadAttachmentInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v3/conversations/{conversationId}/attachments][%d] conversationsUploadAttachmentInternalServerError  %+v", 500, o.Payload)
}

func (o *ConversationsUploadAttachmentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConversationsUploadAttachmentServiceUnavailable creates a ConversationsUploadAttachmentServiceUnavailable with default headers values
func NewConversationsUploadAttachmentServiceUnavailable() *ConversationsUploadAttachmentServiceUnavailable {
	return &ConversationsUploadAttachmentServiceUnavailable{}
}

/*ConversationsUploadAttachmentServiceUnavailable handles this case with default header values.

The service you are trying to communciate with is unavailable.
*/
type ConversationsUploadAttachmentServiceUnavailable struct {
	Payload *models.ErrorResponse
}

func (o *ConversationsUploadAttachmentServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /v3/conversations/{conversationId}/attachments][%d] conversationsUploadAttachmentServiceUnavailable  %+v", 503, o.Payload)
}

func (o *ConversationsUploadAttachmentServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
