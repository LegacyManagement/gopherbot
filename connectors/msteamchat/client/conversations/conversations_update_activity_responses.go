package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/uva-its/gopherbot/connectors/msteamchat/models"
)

// ConversationsUpdateActivityReader is a Reader for the ConversationsUpdateActivity structure.
type ConversationsUpdateActivityReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ConversationsUpdateActivityReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewConversationsUpdateActivityOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 201:
		result := NewConversationsUpdateActivityCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewConversationsUpdateActivityAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewConversationsUpdateActivityBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewConversationsUpdateActivityUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewConversationsUpdateActivityForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewConversationsUpdateActivityNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 405:
		result := NewConversationsUpdateActivityMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewConversationsUpdateActivityInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewConversationsUpdateActivityServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewConversationsUpdateActivityOK creates a ConversationsUpdateActivityOK with default headers values
func NewConversationsUpdateActivityOK() *ConversationsUpdateActivityOK {
	return &ConversationsUpdateActivityOK{}
}

/*ConversationsUpdateActivityOK handles this case with default header values.

An object will be returned containing the ID for the resource.
*/
type ConversationsUpdateActivityOK struct {
	Payload *models.ResourceResponse
}

func (o *ConversationsUpdateActivityOK) Error() string {
	return fmt.Sprintf("[PUT /v3/conversations/{conversationId}/activities/{activityId}][%d] conversationsUpdateActivityOK  %+v", 200, o.Payload)
}

func (o *ConversationsUpdateActivityOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResourceResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConversationsUpdateActivityCreated creates a ConversationsUpdateActivityCreated with default headers values
func NewConversationsUpdateActivityCreated() *ConversationsUpdateActivityCreated {
	return &ConversationsUpdateActivityCreated{}
}

/*ConversationsUpdateActivityCreated handles this case with default header values.

A ResourceResponse object will be returned containing the ID for the resource.
*/
type ConversationsUpdateActivityCreated struct {
	Payload *models.ResourceResponse
}

func (o *ConversationsUpdateActivityCreated) Error() string {
	return fmt.Sprintf("[PUT /v3/conversations/{conversationId}/activities/{activityId}][%d] conversationsUpdateActivityCreated  %+v", 201, o.Payload)
}

func (o *ConversationsUpdateActivityCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResourceResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConversationsUpdateActivityAccepted creates a ConversationsUpdateActivityAccepted with default headers values
func NewConversationsUpdateActivityAccepted() *ConversationsUpdateActivityAccepted {
	return &ConversationsUpdateActivityAccepted{}
}

/*ConversationsUpdateActivityAccepted handles this case with default header values.

An object will be returned containing the ID for the resource.
*/
type ConversationsUpdateActivityAccepted struct {
	Payload *models.ResourceResponse
}

func (o *ConversationsUpdateActivityAccepted) Error() string {
	return fmt.Sprintf("[PUT /v3/conversations/{conversationId}/activities/{activityId}][%d] conversationsUpdateActivityAccepted  %+v", 202, o.Payload)
}

func (o *ConversationsUpdateActivityAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResourceResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConversationsUpdateActivityBadRequest creates a ConversationsUpdateActivityBadRequest with default headers values
func NewConversationsUpdateActivityBadRequest() *ConversationsUpdateActivityBadRequest {
	return &ConversationsUpdateActivityBadRequest{}
}

/*ConversationsUpdateActivityBadRequest handles this case with default header values.

The request was malformed or otherwise incorrect. Inspect the message for a more detailed description.
*/
type ConversationsUpdateActivityBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *ConversationsUpdateActivityBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v3/conversations/{conversationId}/activities/{activityId}][%d] conversationsUpdateActivityBadRequest  %+v", 400, o.Payload)
}

func (o *ConversationsUpdateActivityBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConversationsUpdateActivityUnauthorized creates a ConversationsUpdateActivityUnauthorized with default headers values
func NewConversationsUpdateActivityUnauthorized() *ConversationsUpdateActivityUnauthorized {
	return &ConversationsUpdateActivityUnauthorized{}
}

/*ConversationsUpdateActivityUnauthorized handles this case with default header values.

The bot is not authorized to make this request. Please check your Microsoft App ID and Microsoft App password.
*/
type ConversationsUpdateActivityUnauthorized struct {
}

func (o *ConversationsUpdateActivityUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /v3/conversations/{conversationId}/activities/{activityId}][%d] conversationsUpdateActivityUnauthorized ", 401)
}

func (o *ConversationsUpdateActivityUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewConversationsUpdateActivityForbidden creates a ConversationsUpdateActivityForbidden with default headers values
func NewConversationsUpdateActivityForbidden() *ConversationsUpdateActivityForbidden {
	return &ConversationsUpdateActivityForbidden{}
}

/*ConversationsUpdateActivityForbidden handles this case with default header values.

The request was a valid request, but the server is refusing to respond to it. The user might be logged in but does not have the necessary permissions for the resource.
*/
type ConversationsUpdateActivityForbidden struct {
}

func (o *ConversationsUpdateActivityForbidden) Error() string {
	return fmt.Sprintf("[PUT /v3/conversations/{conversationId}/activities/{activityId}][%d] conversationsUpdateActivityForbidden ", 403)
}

func (o *ConversationsUpdateActivityForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewConversationsUpdateActivityNotFound creates a ConversationsUpdateActivityNotFound with default headers values
func NewConversationsUpdateActivityNotFound() *ConversationsUpdateActivityNotFound {
	return &ConversationsUpdateActivityNotFound{}
}

/*ConversationsUpdateActivityNotFound handles this case with default header values.

The resource was not found.
*/
type ConversationsUpdateActivityNotFound struct {
	Payload *models.ErrorResponse
}

func (o *ConversationsUpdateActivityNotFound) Error() string {
	return fmt.Sprintf("[PUT /v3/conversations/{conversationId}/activities/{activityId}][%d] conversationsUpdateActivityNotFound  %+v", 404, o.Payload)
}

func (o *ConversationsUpdateActivityNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConversationsUpdateActivityMethodNotAllowed creates a ConversationsUpdateActivityMethodNotAllowed with default headers values
func NewConversationsUpdateActivityMethodNotAllowed() *ConversationsUpdateActivityMethodNotAllowed {
	return &ConversationsUpdateActivityMethodNotAllowed{}
}

/*ConversationsUpdateActivityMethodNotAllowed handles this case with default header values.

The method and URI you are trying to use is not allowed on this service.  For example, not all services support the DELETE or PUT verbs on an activity URI.
*/
type ConversationsUpdateActivityMethodNotAllowed struct {
	Payload *models.ErrorResponse
}

func (o *ConversationsUpdateActivityMethodNotAllowed) Error() string {
	return fmt.Sprintf("[PUT /v3/conversations/{conversationId}/activities/{activityId}][%d] conversationsUpdateActivityMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *ConversationsUpdateActivityMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConversationsUpdateActivityInternalServerError creates a ConversationsUpdateActivityInternalServerError with default headers values
func NewConversationsUpdateActivityInternalServerError() *ConversationsUpdateActivityInternalServerError {
	return &ConversationsUpdateActivityInternalServerError{}
}

/*ConversationsUpdateActivityInternalServerError handles this case with default header values.

An internal server has occurred. Inspect the message for a more detailed description.
*/
type ConversationsUpdateActivityInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *ConversationsUpdateActivityInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /v3/conversations/{conversationId}/activities/{activityId}][%d] conversationsUpdateActivityInternalServerError  %+v", 500, o.Payload)
}

func (o *ConversationsUpdateActivityInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConversationsUpdateActivityServiceUnavailable creates a ConversationsUpdateActivityServiceUnavailable with default headers values
func NewConversationsUpdateActivityServiceUnavailable() *ConversationsUpdateActivityServiceUnavailable {
	return &ConversationsUpdateActivityServiceUnavailable{}
}

/*ConversationsUpdateActivityServiceUnavailable handles this case with default header values.

The service you are trying to communciate with is unavailable.
*/
type ConversationsUpdateActivityServiceUnavailable struct {
	Payload *models.ErrorResponse
}

func (o *ConversationsUpdateActivityServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /v3/conversations/{conversationId}/activities/{activityId}][%d] conversationsUpdateActivityServiceUnavailable  %+v", 503, o.Payload)
}

func (o *ConversationsUpdateActivityServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
