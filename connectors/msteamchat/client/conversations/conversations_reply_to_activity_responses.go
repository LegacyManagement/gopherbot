package conversations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/uva-its/gopherbot/connectors/msteamchat/models"
)

// ConversationsReplyToActivityReader is a Reader for the ConversationsReplyToActivity structure.
type ConversationsReplyToActivityReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ConversationsReplyToActivityReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewConversationsReplyToActivityOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 201:
		result := NewConversationsReplyToActivityCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewConversationsReplyToActivityAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewConversationsReplyToActivityBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewConversationsReplyToActivityUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewConversationsReplyToActivityForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewConversationsReplyToActivityNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewConversationsReplyToActivityInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewConversationsReplyToActivityServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewConversationsReplyToActivityOK creates a ConversationsReplyToActivityOK with default headers values
func NewConversationsReplyToActivityOK() *ConversationsReplyToActivityOK {
	return &ConversationsReplyToActivityOK{}
}

/*ConversationsReplyToActivityOK handles this case with default header values.

An object will be returned containing the ID for the resource.
*/
type ConversationsReplyToActivityOK struct {
	Payload *models.ResourceResponse
}

func (o *ConversationsReplyToActivityOK) Error() string {
	return fmt.Sprintf("[POST /v3/conversations/{conversationId}/activities/{activityId}][%d] conversationsReplyToActivityOK  %+v", 200, o.Payload)
}

func (o *ConversationsReplyToActivityOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResourceResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConversationsReplyToActivityCreated creates a ConversationsReplyToActivityCreated with default headers values
func NewConversationsReplyToActivityCreated() *ConversationsReplyToActivityCreated {
	return &ConversationsReplyToActivityCreated{}
}

/*ConversationsReplyToActivityCreated handles this case with default header values.

A ResourceResponse object will be returned containing the ID for the resource.
*/
type ConversationsReplyToActivityCreated struct {
	Payload *models.ResourceResponse
}

func (o *ConversationsReplyToActivityCreated) Error() string {
	return fmt.Sprintf("[POST /v3/conversations/{conversationId}/activities/{activityId}][%d] conversationsReplyToActivityCreated  %+v", 201, o.Payload)
}

func (o *ConversationsReplyToActivityCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResourceResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConversationsReplyToActivityAccepted creates a ConversationsReplyToActivityAccepted with default headers values
func NewConversationsReplyToActivityAccepted() *ConversationsReplyToActivityAccepted {
	return &ConversationsReplyToActivityAccepted{}
}

/*ConversationsReplyToActivityAccepted handles this case with default header values.

An object will be returned containing the ID for the resource.
*/
type ConversationsReplyToActivityAccepted struct {
	Payload *models.ResourceResponse
}

func (o *ConversationsReplyToActivityAccepted) Error() string {
	return fmt.Sprintf("[POST /v3/conversations/{conversationId}/activities/{activityId}][%d] conversationsReplyToActivityAccepted  %+v", 202, o.Payload)
}

func (o *ConversationsReplyToActivityAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResourceResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConversationsReplyToActivityBadRequest creates a ConversationsReplyToActivityBadRequest with default headers values
func NewConversationsReplyToActivityBadRequest() *ConversationsReplyToActivityBadRequest {
	return &ConversationsReplyToActivityBadRequest{}
}

/*ConversationsReplyToActivityBadRequest handles this case with default header values.

The request was malformed or otherwise incorrect. Inspect the message for a more detailed description.
*/
type ConversationsReplyToActivityBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *ConversationsReplyToActivityBadRequest) Error() string {
	return fmt.Sprintf("[POST /v3/conversations/{conversationId}/activities/{activityId}][%d] conversationsReplyToActivityBadRequest  %+v", 400, o.Payload)
}

func (o *ConversationsReplyToActivityBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConversationsReplyToActivityUnauthorized creates a ConversationsReplyToActivityUnauthorized with default headers values
func NewConversationsReplyToActivityUnauthorized() *ConversationsReplyToActivityUnauthorized {
	return &ConversationsReplyToActivityUnauthorized{}
}

/*ConversationsReplyToActivityUnauthorized handles this case with default header values.

The bot is not authorized to make this request. Please check your Microsoft App ID and Microsoft App password.
*/
type ConversationsReplyToActivityUnauthorized struct {
}

func (o *ConversationsReplyToActivityUnauthorized) Error() string {
	return fmt.Sprintf("[POST /v3/conversations/{conversationId}/activities/{activityId}][%d] conversationsReplyToActivityUnauthorized ", 401)
}

func (o *ConversationsReplyToActivityUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewConversationsReplyToActivityForbidden creates a ConversationsReplyToActivityForbidden with default headers values
func NewConversationsReplyToActivityForbidden() *ConversationsReplyToActivityForbidden {
	return &ConversationsReplyToActivityForbidden{}
}

/*ConversationsReplyToActivityForbidden handles this case with default header values.

The request was a valid request, but the server is refusing to respond to it. The user might be logged in but does not have the necessary permissions for the resource.
*/
type ConversationsReplyToActivityForbidden struct {
}

func (o *ConversationsReplyToActivityForbidden) Error() string {
	return fmt.Sprintf("[POST /v3/conversations/{conversationId}/activities/{activityId}][%d] conversationsReplyToActivityForbidden ", 403)
}

func (o *ConversationsReplyToActivityForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewConversationsReplyToActivityNotFound creates a ConversationsReplyToActivityNotFound with default headers values
func NewConversationsReplyToActivityNotFound() *ConversationsReplyToActivityNotFound {
	return &ConversationsReplyToActivityNotFound{}
}

/*ConversationsReplyToActivityNotFound handles this case with default header values.

The resource was not found.
*/
type ConversationsReplyToActivityNotFound struct {
	Payload *models.ErrorResponse
}

func (o *ConversationsReplyToActivityNotFound) Error() string {
	return fmt.Sprintf("[POST /v3/conversations/{conversationId}/activities/{activityId}][%d] conversationsReplyToActivityNotFound  %+v", 404, o.Payload)
}

func (o *ConversationsReplyToActivityNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConversationsReplyToActivityInternalServerError creates a ConversationsReplyToActivityInternalServerError with default headers values
func NewConversationsReplyToActivityInternalServerError() *ConversationsReplyToActivityInternalServerError {
	return &ConversationsReplyToActivityInternalServerError{}
}

/*ConversationsReplyToActivityInternalServerError handles this case with default header values.

An internal server has occurred. Inspect the message for a more detailed description.
*/
type ConversationsReplyToActivityInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *ConversationsReplyToActivityInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v3/conversations/{conversationId}/activities/{activityId}][%d] conversationsReplyToActivityInternalServerError  %+v", 500, o.Payload)
}

func (o *ConversationsReplyToActivityInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConversationsReplyToActivityServiceUnavailable creates a ConversationsReplyToActivityServiceUnavailable with default headers values
func NewConversationsReplyToActivityServiceUnavailable() *ConversationsReplyToActivityServiceUnavailable {
	return &ConversationsReplyToActivityServiceUnavailable{}
}

/*ConversationsReplyToActivityServiceUnavailable handles this case with default header values.

The service you are trying to communciate with is unavailable.
*/
type ConversationsReplyToActivityServiceUnavailable struct {
	Payload *models.ErrorResponse
}

func (o *ConversationsReplyToActivityServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /v3/conversations/{conversationId}/activities/{activityId}][%d] conversationsReplyToActivityServiceUnavailable  %+v", 503, o.Payload)
}

func (o *ConversationsReplyToActivityServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
