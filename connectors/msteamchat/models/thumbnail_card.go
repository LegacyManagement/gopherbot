package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
)

// ThumbnailCard A thumbnail card (card with a single, small thumbnail image)
// swagger:model ThumbnailCard
type ThumbnailCard struct {

	// Set of actions applicable to the current card
	Buttons []*CardAction `json:"buttons"`

	// Array of images for the card
	Images []*CardImage `json:"images"`

	// Subtitle of the card
	Subtitle string `json:"subtitle,omitempty"`

	// This action will be activated when user taps on the card itself
	Tap *CardAction `json:"tap,omitempty"`

	// Text for the card
	Text string `json:"text,omitempty"`

	// Title of the card
	Title string `json:"title,omitempty"`
}

// Validate validates this thumbnail card
func (m *ThumbnailCard) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateButtons(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateImages(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateTap(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ThumbnailCard) validateButtons(formats strfmt.Registry) error {

	if swag.IsZero(m.Buttons) { // not required
		return nil
	}

	for i := 0; i < len(m.Buttons); i++ {

		if swag.IsZero(m.Buttons[i]) { // not required
			continue
		}

		if m.Buttons[i] != nil {

			if err := m.Buttons[i].Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

func (m *ThumbnailCard) validateImages(formats strfmt.Registry) error {

	if swag.IsZero(m.Images) { // not required
		return nil
	}

	for i := 0; i < len(m.Images); i++ {

		if swag.IsZero(m.Images[i]) { // not required
			continue
		}

		if m.Images[i] != nil {

			if err := m.Images[i].Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

func (m *ThumbnailCard) validateTap(formats strfmt.Registry) error {

	if swag.IsZero(m.Tap) { // not required
		return nil
	}

	if m.Tap != nil {

		if err := m.Tap.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}
