package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
)

// AnimationCard An animation card (Ex: gif or short video clip)
// swagger:model AnimationCard
type AnimationCard struct {

	// Should the client loop playback at end of content (default:true)
	Autoloop bool `json:"autoloop,omitempty"`

	// Should the client automatically start playback of video in this card (default:true)
	Autostart bool `json:"autostart,omitempty"`

	// Set of actions applicable to the current card
	Buttons []*CardAction `json:"buttons"`

	// Thumbnail placeholder
	Image *ThumbnailURL `json:"image,omitempty"`

	// Array of media Url objects
	Media []*MediaURL `json:"media"`

	// Is it OK for this content to be shareable with others (default:true)
	Shareable bool `json:"shareable,omitempty"`

	// Subtitle of the card
	Subtitle string `json:"subtitle,omitempty"`

	// Text of the card
	Text string `json:"text,omitempty"`

	// Title of the card
	Title string `json:"title,omitempty"`
}

// Validate validates this animation card
func (m *AnimationCard) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateButtons(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateImage(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateMedia(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AnimationCard) validateButtons(formats strfmt.Registry) error {

	if swag.IsZero(m.Buttons) { // not required
		return nil
	}

	for i := 0; i < len(m.Buttons); i++ {

		if swag.IsZero(m.Buttons[i]) { // not required
			continue
		}

		if m.Buttons[i] != nil {

			if err := m.Buttons[i].Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

func (m *AnimationCard) validateImage(formats strfmt.Registry) error {

	if swag.IsZero(m.Image) { // not required
		return nil
	}

	if m.Image != nil {

		if err := m.Image.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}

func (m *AnimationCard) validateMedia(formats strfmt.Registry) error {

	if swag.IsZero(m.Media) { // not required
		return nil
	}

	for i := 0; i < len(m.Media); i++ {

		if swag.IsZero(m.Media[i]) { // not required
			continue
		}

		if m.Media[i] != nil {

			if err := m.Media[i].Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}
